2019-06-15
----------

- modelmaker needs tests
- find the files where modelmake is imported
    - ./arrays.py
    - ./idf.py
    - ./json2idf.py
    - ./newidfobject.py
    - ./snipidf.py

2019-06-11
----------

try keeping a schema in a module.
It gets imported only once

- done tests for idfjjsonconverter
- use this test code to test all the files in the Example folder

2019-06-10
----------

see
https://code.activestate.com/recipes/66531/
for singleton - use to nesure not reading the schemea.json many times.
NOT USED

google search for borg
https://www.google.com/search?q=python+borg&oq=python+borg&aqs=chrome..69i57j69i61.2400j0j1&sourceid=chrome&ie=UTF-8
NOT USED

also see
https://www.oreilly.com/library/view/python-cookbook/0596001673/ch05s16.html
possibly use this.
NOT USED

2019-06-09
----------

Status
- got some
    - test coverage (check coverage to see what is left)
    - lint
    - doc string
TODO :
    - change names as shown below
    - pytest for idf2json etc -> can announce.
    - continue with coverage
    - integrate idf2json to Class EPJSON
    - use witheppy300 and py90_1eppy3000 to push eppy3000

2019-06-08
----------

Need to revisit the naming conventions

- idfobject -> epobject
- idfobjects -> epobjects
- key -> epkey
- Name -> objectname

- idf -> epj
- idd -> epschema
- *.idf -> *.epJSON

2019-06-03
----------

need to track down how to generate a JSON file from idf file.
Looks like you have to run the simulation.

You can run a JSON file in simulation
<https://unmethours.com/question/36590/can-we-use-epjson-as-input-file-to-run-energy-simulation/>

2019-06-02
----------

issue #20
read idf file
DONE

Look very feasible
- use the witheppy read using noeppy function to read the idf file in
- use the legacy idf def in the epjson to translate to json
- to save as idf - again use legacy idf def in the epjson

pathway
- start with simple objects and test run it
- then work with more complex objects
- finally test with all the files in the example folder


2018-12-24
----------

- set up one test - DONE
- do numpy type doc - MOSLTY DONE
- test setup.py - DONE
- deploy on pypi on pyenergyplus - DONE
- set up travis - DONE on santoshphilip
- set up travis on pyenergyplus

2018-12-16
----------

issues for the moment:

- IDF() will open a new IDD for each file
- if 'eppy_objidd' key not present - throw an IDD not available exception
- IDD has key `items` in the JSON that name-clashes with items function in dict

fixed issue #6

close to release. need the following
- newidfobject - DONE
- copyidfobject
- removeidfobject # popidfobject to be done later - DONE
- see if things break on the inner lists
- StringIO for IDD - DONE

notes to work thru while coding.

- include arg idd in IDF (not a singleton now)
- write an easyopen
- sort the print of the epMunch be IDD sort order
-
- need idd and idd_munch functions
    - idd.version
    - idd.objects # dict
    - iddobj.fieldnames
    - iddobj.fieldvalues
    - iddobj.fieldnames_simple
    - iddobj.fieldvalues_simple
    - iddobj.fieldnames_list
    - iddobj.fieldvalues_list
    - class IDD

idd.properties['BuildingSurface:Detailed'].patternProperties['.*'].properties.vertices.items()

iddMunch
